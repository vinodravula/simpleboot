name: Build & Deploy Spring Boot to Kubernetes

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/springboot-app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - uses: actions/checkout@v3

    # Step 2: Set up JDK 21
    - name: Set up Java 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    # Step 3: Build with Gradle
    - name: Build with Gradle
      run: ./gradlew clean build

    # Step 4: Log in to Docker registry
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 5: Build and push Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    # Step 6: Set up kubectl
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    # Step 7: Write kubeconfig file
    - name: Write kubeconfig
      run: |
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config

    # Step 8: Deploy to Kubernetes
    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/springboot-app springboot-app=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} --record
        kubectl apply -f k8s/